name: Mobile UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  android-test:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Appium
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: Check APK
        run: |
          APK_PATH="$GITHUB_WORKSPACE/app/General-Store.apk"
          if [ ! -f "$APK_PATH" ]; then echo "‚ùå APK not found at $APK_PATH"; exit 1; fi
          echo "‚úÖ APK found at $APK_PATH"

      - name: Start Appium server
        run: |
          nohup appium --log appium.log --base-path /wd/hub > /dev/null 2>&1 &
          sleep 10

      - name: Start Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86
          profile: pixel_4
          disable-animations: true
          ram-size: 2048M
          heap-size: 512M
          script: |
            set -e
            export CI=true

            echo "üåê Installing APK..."
            adb install -r "$GITHUB_WORKSPACE/app/General-Store.apk"

            echo "üöÄ Starting app..."
            adb shell am start -W -n com.androidsample.generalstore/.SplashActivity

            echo "üß™ Running Maven tests..."
            mvn -B clean test -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results/android || TEST_EXIT_CODE=$?

            exit ${TEST_EXIT_CODE:-0}

  ios-test:
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Appium
        run: |
          npm install -g appium@3.0.2
          appium driver install xcuitest

      - name: Start iOS Simulator
        run: |
          xcrun simctl boot "iPhone 14" || true
          echo "üïì Waiting for simulator boot..."
          timeout=300
          counter=0
          while [ "$(xcrun simctl list devices | grep Booted | grep 'iPhone 14')" = "" ]; do
            [ $counter -ge $timeout ] && echo "‚ùå Timeout waiting for simulator" && exit 1
            echo "‚è≥ Waiting for simulator boot... ($counter/$timeout)"
            sleep 5
            counter=$((counter + 5))
          done
          xcrun simctl list devices

      - name: Start Appium server
        run: |
          nohup appium --log appium.log --base-path /wd/hub > /dev/null 2>&1 &
          sleep 10

      - name: Install iOS app and run tests
        run: |
          APP_PATH="$GITHUB_WORKSPACE/app/General-Store.app"
          xcrun simctl install booted "$APP_PATH"
          xcrun simctl launch booted com.yourcompany.GeneralStore
          mvn -B clean test -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results/ios || TEST_EXIT_CODE=$?
          exit ${TEST_EXIT_CODE:-0}

  allure-report:
    runs-on: ubuntu-latest
    needs: [android-test, ios-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate Allure report
        run: |
          if [ -d "target/allure-results" ]; then
            echo "üìà Generating Allure report..."
            sudo apt-get update -y
            wget https://github.com/allure-framework/allure2/releases/download/2.30.0/allure-2.30.0.tgz
            sudo tar -zxvf allure-2.30.0.tgz -C /opt/
            sudo ln -s /opt/allure-2.30.0/bin/allure /usr/bin/allure
            allure generate target/allure-results -o target/site/allure-report --clean
          else
            echo "‚ö†Ô∏è No test results found for Allure"
            mkdir -p target/site/allure-report
            echo "<html><body><h1>No test results available</h1></body></html>" > target/site/allure-report/index.html
          fi

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/site/allure-report/
