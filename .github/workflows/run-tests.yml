name: UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  android-test:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Install Appium (Android)
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: Start Appium server (Android)
        run: |
          nohup appium -p 4723 --log appium-android.log --base-path /wd/hub > appium-android.log 2>&1 &
          sleep 10
          curl -s http://127.0.0.1:4723/wd/hub/status

      - name: Start Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86
          profile: pixel_4
          disable-animations: true
          ram-size: 2048M
          heap-size: 512M
          script: |
            export CI=true
            adb install -r $GITHUB_WORKSPACE/app/General-Store.apk
            mvn -B clean test -Pandroid -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results || TEST_EXIT_CODE=$?
            exit ${TEST_EXIT_CODE:-0}

      - name: Upload Android screenshots
        uses: actions/upload-artifact@v4
        with:
          name: android-screenshots
          path: target/screenshots/

      - name: Upload Android Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-allure-report
          path: target/site/allure-report/

  ios-test:
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Select available iPhone simulator
        id: select-sim
        run: |
          SIM_UDID=$(xcrun simctl list devices available | grep -E "iPhone" | grep -v "iPad" | head -1 | awk -F '[()]' '{print $2}')
          if [ -z "$SIM_UDID" ]; then
            echo "❌ Не знайдено доступний iPhone симулятор"
            exit 1
          fi
          echo "✅ Вибрано симулятор UDID: $SIM_UDID"
          echo "SIM_UDID=$SIM_UDID" >> $GITHUB_ENV

      - name: Boot iPhone simulator
        run: |
          xcrun simctl boot "$SIM_UDID" || echo "Simulator already booted"
          until xcrun simctl bootstatus "$SIM_UDID" -b; do sleep 2; done
          xcrun simctl list devices | grep "$SIM_UDID"

      - name: Install Appium + XCUITest driver
        run: |
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-timeout 600000
          npm install -g appium@3.0.2
          appium driver install xcuitest
          echo "✅ Appium та XCUITest готові до роботи"
          appium -v

      - name: Set APPIUM_JS_PATH
        run: echo "export APPIUM_JS_PATH=$(npm root -g)/appium/build/lib/main.js" >> $GITHUB_ENV

      - name: Start Appium server (iOS)
        run: |
          if lsof -i :4725; then
            echo "Port 4725 in use, killing existing Appium..."
            lsof -ti :4725 | xargs kill -9
          fi
          nohup node "$APPIUM_JS_PATH" -p 4725 --log appium-ios.log --base-path /wd/hub > appium-ios.log 2>&1 &
          until curl -s http://127.0.0.1:4725/wd/hub/status | grep -q '"ready":true'; do echo "Waiting for Appium..."; sleep 2; done
          echo "✅ Appium server ready"

      - name: Run Maven iOS tests
        run: |
          mvn clean test -Pios -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results
