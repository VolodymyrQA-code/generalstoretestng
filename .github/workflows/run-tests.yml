name: UI Tests with Allure

on:
  push:
  pull_request:

jobs:
  android-test:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.19.0

      - name: Install Appium (Android)
        run: |
          npm install -g appium@3.0.2
          appium driver install uiautomator2

      - name: Start Appium server (Android)
        run: |
          nohup appium -p 4723 --log appium-android.log --base-path /wd/hub > appium-android.log 2>&1 &
          sleep 10
          curl -s http://127.0.0.1:4723/wd/hub/status

      - name: Start Android emulator and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86
          profile: pixel_4
          disable-animations: true
          ram-size: 2048M
          heap-size: 512M
          script: |
            export CI=true
            adb install -r $GITHUB_WORKSPACE/app/General-Store.apk
            mvn -B clean test -Pandroid -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results || TEST_EXIT_CODE=$?
            exit ${TEST_EXIT_CODE:-0}

      - name: Upload Android screenshots
        uses: actions/upload-artifact@v4
        with:
          name: android-screenshots
          path: target/screenshots/

      - name: Upload Android Allure report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-allure-report
          path: target/site/allure-report/

  ios-ios-test:  
    runs-on: macos-latest
    timeout-minutes: 50
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Install Appium + XCUITest driver
      run: |
        npm install -g appium@3.0.2
        appium driver install xcuitest
        echo "✅ Appium installed"
        echo "📌 LOGGING: node version $(node -v)"
        echo "📌 LOGGING: npm global root $(npm root -g)"
        echo "📌 LOGGING: which appium $(which appium)"

    - name: Select latest Xcode
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
        echo "📌 LOGGING: Selected Xcode path $(xcode-select -p)"

    - name: Install iOS dependencies
      run: |
        brew install carthage || true
        brew install ideviceinstaller ios-deploy libimobiledevice || true

    - name: Select available iPhone simulator
      id: select-sim
      run: |
        SIM_UDID=$(xcrun simctl list devices available | grep -E "iPhone" | grep -v "iPad" | head -1 | awk -F '[()]' '{print $2}')
        if [ -z "$SIM_UDID" ]; then
          echo "❌ No iPhone simulator found"
          exit 1
        fi
        echo "✅ Selected simulator UDID: $SIM_UDID"
        echo "SIM_UDID=$SIM_UDID" >> $GITHUB_ENV
        echo "📌 LOGGING: simctl list devices available"
        xcrun simctl list devices available

    - name: Boot iPhone simulator
      run: |
        echo "🧹 Preparing simulator..."
        xcrun simctl erase "$SIM_UDID"
        xcrun simctl boot "$SIM_UDID" || echo "Already booted"
        open -a Simulator
        sleep 40
        echo "📌 LOGGING: simctl list devices booted"
        xcrun simctl list devices booted

    - name: 📦 Set APP_PATH for iOS tests
      run: echo "APP_PATH=$GITHUB_WORKSPACE/AppIos/TheApp.app" >> $GITHUB_ENV

    - name: Start Appium server (iOS)
      run: |
        echo "📌 LOGGING: Starting Appium..."
        APPIUM_CMD=$(which appium)
        echo "📌 LOGGING: Using Appium binary at $APPIUM_CMD"

        # Запускаємо Appium у фоні без nohup (щоб GitHub runner не вбивав процес)
        $APPIUM_CMD -p 4725 \
          --base-path /wd/hub \
          --session-override \
          --relaxed-security \
          --allow-insecure=chromedriver_autodownload \
          > appium-ios.log 2>&1 &

        echo "📌 LOGGING: Waiting for Appium to be ready..."
        npx wait-on http://127.0.0.1:4725/wd/hub/status

        echo "✅ Appium is up and running!"
        tail -n 20 appium-ios.log

    - name: Run Maven iOS tests
      run: |
        mvn clean test -Pios -Dsurefire.useFile=false -Dallure.results.directory=target/allure-results

    - name: Upload iOS Allure report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: ios-allure-report
        path: target/site/allure-report/
