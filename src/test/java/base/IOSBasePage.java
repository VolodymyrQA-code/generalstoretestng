package base;

import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.remote.options.BaseOptions;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.remote.RemoteWebDriver;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.time.Duration;

public class IOSBasePage {

    protected static IOSDriver driver; // –æ–¥–∏–Ω –¥—Ä–∞–π–≤–µ—Ä –¥–ª—è –≤—Å—ñ—Ö —Ç–µ—Å—Ç—ñ–≤

    /**
     * –°—Ç–≤–æ—Ä—é—î –¥—Ä–∞–π–≤–µ—Ä, —è–∫—â–æ –≤—ñ–Ω —â–µ –Ω–µ —ñ—Å–Ω—É—î
     */
    public void startDriver() {
        if (driver != null) {
            System.out.println("‚ö†Ô∏è LOGGING: –î—Ä–∞–π–≤–µ—Ä –≤–∂–µ —ñ—Å–Ω—É—î, –ø–æ–≤—Ç–æ—Ä–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ.");
            return;
        }

        System.out.println("üöÄ LOGGING: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ iOS Driver...");

        try {
            BaseOptions options = new BaseOptions()
                    .amend("platformName", "iOS")
                    .amend("automationName", "XCUITest")
                    .amend("deviceName", "iPhone 16 Pro")
                    .amend("platformVersion", "18.4")
                    .amend("udid", System.getenv("SIM_UDID"))
                    .amend("app", "/Users/runner/work/ios-app.ipa")
                    .amend("newCommandTimeout", 300)
                    .amend("noReset", false);

            driver = new IOSDriver(
                    new URL("http://127.0.0.1:4725/wd/hub"),
                    options
            );

            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
            System.out.println("‚úÖ LOGGING: iOS Driver —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.");

        } catch (MalformedURLException e) {
            System.err.println("‚ùå LOGGING: –ù–µ–≤—ñ—Ä–Ω–∏–π URL Appium —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî " + e.getMessage());
        } catch (Exception e) {
            System.err.println("‚ùå LOGGING: –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä–∞ ‚Äî " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–Ω—à–æ—Ç—É
     */
    public static void takeScreenshot(String name) {
        if (driver == null) {
            System.err.println("‚ö†Ô∏è LOGGING: –ù–µ–º–æ–∂–ª–∏–≤–æ –∑—Ä–æ–±–∏—Ç–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç ‚Äî driver == null");
            return;
        }
        try {
            File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            File dest = new File(name + ".png");
            Files.copy(src.toPath(), dest.toPath());
            System.out.println("üì∏ LOGGING: –°–∫—Ä–∏–Ω—à–æ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ ‚Üí " + dest.getAbsolutePath());
        } catch (IOException e) {
            System.err.println("‚ùå LOGGING: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Å–∫—Ä–∏–Ω—à–æ—Ç—É ‚Äî " + e.getMessage());
        }
    }
}
