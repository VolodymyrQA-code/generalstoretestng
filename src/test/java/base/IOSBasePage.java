package base;

import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.remote.options.BaseOptions;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.time.Duration;

/**
 * –ë–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó iOS-–¥—Ä–∞–π–≤–µ—Ä–∞ —Ç–∞ –¥–æ–ø–æ–º—ñ–∂–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤.
 */
public class IOSBasePage {

    protected static IOSDriver driver;

    /**
     * ü™µ DEBUG: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–±–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É—é—á–æ–≥–æ iOS Driver.
     */
    public void startDriver() {
        if (driver != null) {
            System.out.println("‚ö†Ô∏è LOGGING: –î—Ä–∞–π–≤–µ—Ä –≤–∂–µ —ñ—Å–Ω—É—î, –ø–æ–≤—Ç–æ—Ä–Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–ø—É—â–µ–Ω–æ.");
            return;
        }

        System.out.println("üöÄ LOGGING: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ iOS Driver...");

        try {
            // ü™µ DEBUG: 1Ô∏è‚É£ –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö –¥–æ .app –∞–±–æ .ipa
            String appPath = System.getenv("APP_PATH");

            if (appPath == null || appPath.isEmpty()) {
                File localApp = new File("/Users/IUAR0044/generalstore/AppIos/TheApp.app");
                if (localApp.exists()) {
                    appPath = localApp.getAbsolutePath();
                    System.out.println("üì¶ LOGGING: –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –ª–æ–∫–∞–ª—å–Ω–∏–π .app ‚Üí " + appPath);
                } else {
                    System.out.println("‚ö†Ô∏è LOGGING: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ .app/.ipa ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ bundleId");
                }
            } else {
                System.out.println("üì¶ LOGGING: APP_PATH –∑ env ‚Üí " + appPath);
            }

            // ü™µ DEBUG: 2Ô∏è‚É£ –§–æ—Ä–º—É—î–º–æ –æ–ø—Ü—ñ—ó –¥—Ä–∞–π–≤–µ—Ä–∞
            BaseOptions options = new BaseOptions()
                    .amend("platformName", "iOS")
                    .amend("automationName", "XCUITest")
                    .amend("deviceName", "iPhone 16 Pro")
                    .amend("platformVersion", "18.4")
                    .amend("udid", System.getenv("SIM_UDID"))
                    .amend("newCommandTimeout", 300)
                    .amend("noReset", false);

            if (appPath != null && !appPath.isEmpty()) {
                options.amend("app", appPath);
            } else {
                options.amend("bundleId", "com.cloudinary.theapp");
            }

            // ü™µ DEBUG: 3Ô∏è‚É£ –°—Ç–≤–æ—Ä—é—î–º–æ –¥—Ä–∞–π–≤–µ—Ä
            System.out.println("üß† LOGGING: –°—Ç–≤–æ—Ä—é—î–º–æ iOSDriver –Ω–∞ –ø–æ—Ä—Ç—É 4725...");
            driver = new IOSDriver(new URL("http://127.0.0.1:4725/wd/hub"), options);
            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

            System.out.println("‚úÖ LOGGING: iOS Driver —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ.");

        } catch (MalformedURLException e) {
            System.err.println("‚ùå LOGGING: –ù–µ–≤—ñ—Ä–Ω–∏–π URL Appium —Å–µ—Ä–≤–µ—Ä–∞ ‚Äî " + e.getMessage());
        } catch (Exception e) {
            System.err.println("‚ùå LOGGING: –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—Ä–∞–π–≤–µ—Ä–∞ ‚Äî " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * üßπ –ó–∞–∫—Ä–∏—Ç—Ç—è –¥—Ä–∞–π–≤–µ—Ä–∞.
     */
    public void stopDriver() {
        if (driver != null) {
            System.out.println("üßπ LOGGING: –ó–∞–∫—Ä–∏–≤–∞—î–º–æ iOS Driver...");
            driver.quit();
            driver = null;
            System.out.println("‚úÖ LOGGING: –î—Ä–∞–π–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–∫—Ä–∏—Ç–æ.");
        } else {
            System.out.println("‚ö†Ô∏è LOGGING: –î—Ä–∞–π–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π, –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ –Ω—ñ—á–æ–≥–æ.");
        }
    }

    /**
     * üì∏ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∫—Ä–∏–Ω—à–æ—Ç—É.
     */
    public static void takeScreenshot(String name) {
        if (driver == null) {
            System.err.println("‚ö†Ô∏è LOGGING: –ù–µ–º–æ–∂–ª–∏–≤–æ –∑—Ä–æ–±–∏—Ç–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç ‚Äî driver == null");
            return;
        }
        try {
            File src = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
            File dest = new File(name + ".png");
            Files.copy(src.toPath(), dest.toPath());
            System.out.println("üì∏ LOGGING: –°–∫—Ä–∏–Ω—à–æ—Ç –∑–±–µ—Ä–µ–∂–µ–Ω–æ ‚Üí " + dest.getAbsolutePath());
        } catch (IOException e) {
            System.err.println("‚ùå LOGGING: –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ —Å–∫—Ä–∏–Ω—à–æ—Ç—É ‚Äî " + e.getMessage());
        }
    }
}
