package pages;

import io.appium.java_client.android.AndroidDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.apache.commons.io.FileUtils;
import io.qameta.allure.Step;

import java.io.File;
import java.io.IOException;

import static org.testng.Assert.assertTrue;

public class SplashPage {

    private final AndroidDriver driver;

    // ID –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
    private final By splashId = By.id("com.androidsample.generalstore:id/splashscreen");
    private final By homeToolbarId = By.id("com.androidsample.generalstore:id/toolbar_title");

    public SplashPage(AndroidDriver driver) {
        this.driver = driver;
    }

    /**
     * –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ splash screen –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è.
     * –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ —Ç–µ—Å—Ç—É TestNG —á–µ—Ä–µ–∑ assertTrue.
     */
    @Step("–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è Splash Screen")
    public boolean isSplashDisplayed() {
        long startTime = System.currentTimeMillis();

        boolean splashPresent = !driver.findElements(splashId).isEmpty();

        if (splashPresent) {
            long elapsed = System.currentTimeMillis() - startTime;
            System.out.println("‚úÖ Splash screen visible immediately! –ß–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: " + elapsed / 1000.0 + "s");
            return true;
        } else {
            boolean homeVisible = !driver.findElements(homeToolbarId).isEmpty();
            if (homeVisible) {
                long elapsed = System.currentTimeMillis() - startTime;
                System.out.println("‚ÑπÔ∏è Splash skipped, –∞–ª–µ –≥–æ–ª–æ–≤–Ω–∏–π –µ–∫—Ä–∞–Ω –≤–∏–¥–∏–º–∏–π. –ß–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: " + elapsed / 1000.0 + "s");
                return true;
            } else {
                System.out.println("‚ùå Neither splash nor home screen found. Saving debug info...");
                saveDebugInfo();
                return false;
            }
        }
    }

    /**
     * –í–∏–∫–ª–∏–∫ –¥–ª—è TestNG:
     * assertTrue(splashPage.verifySplashVisible(), "Splash –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–æ!");
     */
    public void verifySplashVisible() {
        assertTrue(isSplashDisplayed(), "Splash screen –Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è");
    }

    @Step("–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∫—Ä—ñ–Ω—à–æ—Ç—É —Ç–∞ PageSource –¥–ª—è –¥–µ–±–∞–≥—É")
    private void saveDebugInfo() {
        try {
            File screenshot = driver.getScreenshotAs(OutputType.FILE);
            File targetFile = new File("target/screenshots/splash_timeout.png");
            FileUtils.copyFile(screenshot, targetFile);
            System.out.println("üì∏ Screenshot saved: " + targetFile.getAbsolutePath());

            File pageSourceFile = new File("target/screenshots/splash_timeout.xml");
            FileUtils.writeStringToFile(pageSourceFile, driver.getPageSource(), "UTF-8");
            System.out.println("üìÑ Page source saved: " + pageSourceFile.getAbsolutePath());
        } catch (IOException ioEx) {
            System.out.println("‚ö†Ô∏è Failed to save screenshot or page source: " + ioEx.getMessage());
        }
    }
}
